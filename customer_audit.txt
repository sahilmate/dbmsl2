CREATE TABLE Customer_Master (
    cust_no NUMBER PRIMARY KEY,
    Cust_name VARCHAR2(50),
    DOB DATE,
    Addr VARCHAR2(100)
);
CREATE TABLE Customer_Audit (
    audit_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    operation VARCHAR2(10),
    cust_no NUMBER,
    old_Cust_name VARCHAR2(50),
    new_Cust_name VARCHAR2(50),
    old_DOB DATE,
    new_DOB DATE,
    old_Addr VARCHAR2(100),
    new_Addr VARCHAR2(100)
    
);
CREATE OR REPLACE TRIGGER trg_customer_audit
AFTER INSERT OR UPDATE OR DELETE ON Customer_Master
FOR EACH ROW
DECLARE
    v_operation VARCHAR2(10);
BEGIN
    -- Assign the operation type based on the DML action
    IF INSERTING THEN
        v_operation := 'INSERT';
        INSERT INTO Customer_Audit (
            operation, cust_no,
            old_Cust_name, new_Cust_name,
            old_DOB, new_DOB,
            old_Addr, new_Addr
        ) VALUES (
            v_operation, :NEW.cust_no,
            NULL, :NEW.Cust_name,
            NULL, :NEW.DOB,
            NULL, :NEW.Addr
        );
    
    ELSIF UPDATING THEN
        v_operation := 'UPDATE';
        INSERT INTO Customer_Audit (
            operation, cust_no,
            old_Cust_name, new_Cust_name,
            old_DOB, new_DOB,
            old_Addr, new_Addr
        ) VALUES (
            v_operation, :OLD.cust_no,
            :OLD.Cust_name, :NEW.Cust_name,
            :OLD.DOB, :NEW.DOB,
            :OLD.Addr, :NEW.Addr
        );
    
    ELSIF DELETING THEN
        v_operation := 'DELETE';
        INSERT INTO Customer_Audit (
            operation, cust_no,
            old_Cust_name, new_Cust_name,
            old_DOB, new_DOB,
            old_Addr, new_Addr
        ) VALUES (
            v_operation, :OLD.cust_no,
            :OLD.Cust_name, NULL,
            :OLD.DOB, NULL,
            :OLD.Addr, NULL
        );
    END IF;
END;
/
